(1) 연결 리스트
○ 링크드 리스트(linked list)
○ 노드(데이터, 포인터)가 한 줄로 연결되어 있는 방식의 자료구조
○ 포인터는 다음 또는 이전의 노드와의 연결(주소값)을 담당
○ 개념이 복잡하고, 구현이 어려움
○ 메모리 사용 효율성이 높음
○ 데이터 접근이 느림
○ 단일 연결 리스트/이중 연결 리스트/원형 연결 리스트

(2) 연결 리스트 실습 코드
class SList:
    class Node:
        def __init__(self, item, link):
            self.item = item
            self.next = link

    def __init__(self):
        print("난 SList의 생성자")  
        self.head = None  
        self.size = 0
    def isEmpty(self):
        return self.size == 0    
    def insert_front(self, item):
        if self.isEmpty():
            self.head = self.Node(item , None)
        else:
            self.head = self.Node(item, self.head)
        self.size += 1

    def printList(self):
        p = self.head
        while p:
            if p.next is not None:
                print(p.item , "=>", end="")
            else:
                print(p.item)
            p = p.next

def globalFunc():
    pass

if __name__=="__main__":
    s = SList()
    s.insert_front("apple")
    s.insert_front("orange")
    s.printList()
    
